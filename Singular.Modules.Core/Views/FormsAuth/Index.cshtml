@using System.Web.Mvc
@using Singular.Modules.Core.HtmlExtensions
@using Singular.Web.Mvc.Common.HtmlExtensions
@using Singular.Web.Mvc.HtmlExtensions
@inherits System.Web.Mvc.WebViewPage<Singular.Modules.Core.ViewModels.FormsAuthViewModel>

@{
    ViewBag.Title = Html.Translate("Login");
    ViewBag.NgAppName = "Singular.Modules.SingularFormsAuthApp";
}

<h2>@ViewBag.Title</h2>

@section scripts
{
    <script src="@Url.EmbeddedContent("Core", "~/Content/Ng/Modules/SingularFormsAuthApp.js", IncludeBehaviour.MinifyWhenNotDebug)"></script>
}
<div ng-controller="FormsAuthController">
    @*<form class="sg-form" data-ng-submit="Login()">*@
    @using (Html.BeginNgForm(x => x
        .OnSubmit("Login()")
        .CssClass("sg-form")
        ))
    {
        @Html.NgEditorFor(x => x.Email, x => x
                .Input()
                .ModelPrefix("Model")
                .BootstrapFormControl()
                .BootstrapFormGroup()
                .LabelText(Html.Translate("Email"))
                .Attribute("type", "email")
                //.Attribute("ng-required", "true")
                //.Attribute("autocomplete", "off")
        )
        @Html.NgEditorFor(x => x.Password, x => x
                .Input()
                .BootstrapFormControl()
                .BootstrapFormGroup()
                .LabelText(Html.Translate("Password"))
                .Attribute("type", "password")
                //.Attribute("ng-required", "true")
        )
        @*using (Html.BeginBootstrapFormGroup())
        {
        @Html.NgEditorFor(x => x.RememberMe, x => x
                .UiCheckbox()
                .LabelText(Html.Translate("Remember me?"))
        )
        }*@
        @Html.NgEditorFor(x => x.RememberMe, x => x
                .UiRadioList(Model.GetYesNoList(),"default")
                .BootstrapFormGroup()
                .LabelText(Html.Translate("Stay signed in?"))
        )
        using (Html.BeginBootstrapFormGroup())
        {
            @Html.BootstrapButton(x => x
                .BootstrapButton("primary")
                .BeforeGlyph("ok")
                .LabelText(Html.Translate("Submit"))
                .Attribute("type", "submit")
                .Attribute("ng-disabled", "!FormIsValid()")
                .CssClass("margin-right-half")
            )

            @Html.BootstrapButton(x => x
                .BootstrapButton("danger")
                .AfterGlyph("remove")
                .LabelText(Html.Translate("Reset"))
                .Attribute("type", "reset")
                .Attribute("ng-click", Html.PropertyExpression("Model.{0} = false;", y=> y.RememberMe))
            )
        }
    }
</div>